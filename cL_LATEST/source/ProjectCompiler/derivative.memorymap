ifeq ($(DERIVATIVE_GROUP_$(DERIVATIVE)),)
 $(error "Derivative Group for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
endif

ifeq ($(DERIVATIVE_GROUP_$(DERIVATIVE)),$(filter $(DERIVATIVE_GROUP_$(DERIVATIVE)),F1H C1H C1M_AZ P1H F1KH))
  ifeq ($(GLOBAL_RAM_SIZE_BANKA_$(DERIVATIVE)),)
    $(error "Global RAM size of Bank A for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
  endif

  ifeq ($(GLOBAL_RAM_SIZE_BANKB_$(DERIVATIVE)),)
    $(error "Global RAM size of Bank B for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
  endif

  ifeq ($($(DERIVATIVE_GROUP_$(DERIVATIVE))_CODEFLASH_START_ADDRESS_BANKB_$(CODEFLASH_SIZE_BANKB_$(DERIVATIVE))),)
# The most families start CodeFlash Bank B at 0x00800000.
#if one derivative differs, you can specify a derivative/family specific addresse within Makefile.derivative.settings
  $(DERIVATIVE_GROUP_$(DERIVATIVE))_CODEFLASH_START_ADDRESS_BANKB_$(CODEFLASH_SIZE_BANKB_$(DERIVATIVE)) = 0x00800000
  endif

  ifeq ($(CODEFLASH_SIZE_BANKA_$(DERIVATIVE)),)
   $(error "CodeFlash size of Bank A for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
  endif

  ifeq ($(CODEFLASH_SIZE_BANKB_$(DERIVATIVE)),)
   $(error "CodeFlash size of Bank B for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
  endif

  ifeq ($(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE)),)
   $(error "RAM size for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
  endif

  ifeq ($(LOCAL_RAM_SIZE_CORE1_$(DERIVATIVE)),)
   $(error "RAM size for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
  endif

  ifeq ($($(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE0_$(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE))),)
   $(error "RAM start address $(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE0_$(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE)) is not yet defined within Makefile.derivative.settings.")
  endif

  ifeq ($($(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE1_$(LOCAL_RAM_SIZE_CORE1_$(DERIVATIVE))),)
   $(error "RAM start address $(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE1_$(LOCAL_RAM_SIZE_CORE1_$(DERIVATIVE)) is not yet defined within Makefile.derivative.settings.")
  endif

else

  ifeq ($(DERIVATIVE_GROUP_$(DERIVATIVE)),$(filter $(DERIVATIVE_GROUP_$(DERIVATIVE)),F1KM_S4))
    ifeq ($(GLOBAL_RAM_SIZE_BANKA_$(DERIVATIVE)),)
      $(error "Global RAM size of Bank A for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
    endif

    ifeq ($(GLOBAL_RAM_SIZE_BANKB_$(DERIVATIVE)),)
      $(error "Global RAM size of Bank B for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
    endif

    ifeq ($(CODEFLASH_SIZE_BANKA_$(DERIVATIVE)),)
     $(error "CodeFlash size of Bank A for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
    endif

    ifeq ($(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE)),)
     $(error "RAM size for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
    endif

    ifeq ($($(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE0_$(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE))),)
     $(error "RAM start address $(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE0_$(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE)) is not yet defined within Makefile.derivative.settings.")
    endif

  else
    ifeq ($(GLOBAL_RAM_SIZE_$(DERIVATIVE)),)
      $(error "Global RAM size for your DERIVATIVE is not yet defined within Makefile.derivative.settings.")
    endif

    ifeq ($($(DERIVATIVE_GROUP_$(DERIVATIVE))_RAM_START_ADDRESS_$(GLOBAL_RAM_SIZE_$(DERIVATIVE))),)
     $(error "Global RAM start address $(DERIVATIVE_GROUP_$(DERIVATIVE))_RAM_START_ADDRESS_$(GLOBAL_RAM_SIZE_$(DERIVATIVE)) is not yet defined within Makefile.derivative.settings.")
    endif
  endif

endif

###########################################################################################################
####  MEMORY MAP FOR GHS / DIAB                                                ####
###########################################################################################################
ifeq ($(DERIVATIVE_GROUP_$(DERIVATIVE)),$(filter $(DERIVATIVE_GROUP_$(DERIVATIVE)),F1H C1H C1M_AZ P1H F1KH))
  define MEMORY_ALLGROUPS
    $(ECHO) "  iROM_0A    : ORIGIN = 0x00000000,"                                                                                                "LENGTH = $(CODEFLASH_SIZE_BANKA_$(DERIVATIVE))k"  >> $@; \
    $(ECHO) "  iROM_0B    : ORIGIN = $($(DERIVATIVE_GROUP_$(DERIVATIVE))_CODEFLASH_START_ADDRESS_BANKB_$(CODEFLASH_SIZE_BANKB_$(DERIVATIVE))),"  "LENGTH = $(CODEFLASH_SIZE_BANKB_$(DERIVATIVE))k"  >> $@; \
    $(ECHO) "  iROM_1     : ORIGIN = 0x01000000,"                                                                                                "LENGTH = 32k"                                     >> $@; \
    $(ECHO) "  iRAM_CORE0 : ORIGIN = $($(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE0_$(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE))),"  "LENGTH = $(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE))k"  >> $@; \
    $(ECHO) "  iRAM_CORE1 : ORIGIN = $($(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE1_$(LOCAL_RAM_SIZE_CORE1_$(DERIVATIVE))),"  "LENGTH = $(LOCAL_RAM_SIZE_CORE1_$(DERIVATIVE))k"  >> $@; \
    $(ECHO) "  gRAM_A     : ORIGIN = $($(DERIVATIVE_GROUP_$(DERIVATIVE))_GLOBAL_RAM_BANK_A_START_ADDRESS_$(GLOBAL_RAM_SIZE_BANKA_$(DERIVATIVE))), LENGTH = $(GLOBAL_RAM_SIZE_BANKA_$(DERIVATIVE))k" >> $@; \
    $(ECHO) "  gRAM_B     : ORIGIN = $($(DERIVATIVE_GROUP_$(DERIVATIVE))_GLOBAL_RAM_BANK_B_START_ADDRESS_$(GLOBAL_RAM_SIZE_BANKB_$(DERIVATIVE))), LENGTH = $(GLOBAL_RAM_SIZE_BANKB_$(DERIVATIVE))k" >> $@;
  endef

else
  ifeq ($(DERIVATIVE_GROUP_$(DERIVATIVE)),$(filter $(DERIVATIVE_GROUP_$(DERIVATIVE)),F1KM_S4))
    define MEMORY_ALLGROUPS
      $(ECHO) "  iROM_0A    : ORIGIN = 0x00000000,"                                                                                                "LENGTH = $(CODEFLASH_SIZE_BANKA_$(DERIVATIVE))k"  >> $@; \
      $(ECHO) "  iROM_1     : ORIGIN = 0x01000000,"                                                                                                "LENGTH = 32k"                                     >> $@; \
      $(ECHO) "  iRAM_CORE0 : ORIGIN = $($(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE0_$(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE))),"  "LENGTH = $(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE))k"  >> $@; \
      $(ECHO) "  gRAM_A     : ORIGIN = $($(DERIVATIVE_GROUP_$(DERIVATIVE))_GLOBAL_RAM_BANK_A_START_ADDRESS_$(GLOBAL_RAM_SIZE_BANKA_$(DERIVATIVE))), LENGTH = $(GLOBAL_RAM_SIZE_BANKA_$(DERIVATIVE))k" >> $@; \
      $(ECHO) "  gRAM_B     : ORIGIN = $($(DERIVATIVE_GROUP_$(DERIVATIVE))_GLOBAL_RAM_BANK_B_START_ADDRESS_$(GLOBAL_RAM_SIZE_BANKB_$(DERIVATIVE))), LENGTH = $(GLOBAL_RAM_SIZE_BANKB_$(DERIVATIVE))k" >> $@;
    endef

  else
    define MEMORY_ALLGROUPS
      $(ECHO) "  iROM_0A    : ORIGIN = 0x00000000,"                                                                            "LENGTH = $(CODEFLASH_SIZE_$(DERIVATIVE))k"  >> $@; \
      $(ECHO) "  iROM_1     : ORIGIN = 0x01000000,"                                                                            "LENGTH = 32k"                               >> $@; \
      $(ECHO) "  iRAM_CORE0 : ORIGIN = $($(DERIVATIVE_GROUP_$(DERIVATIVE))_RAM_START_ADDRESS_$(GLOBAL_RAM_SIZE_$(DERIVATIVE))), LENGTH = $(GLOBAL_RAM_SIZE_$(DERIVATIVE))k" >> $@;
    endef
  endif
endif

###########################################################################################################
####  MEMORY MAP FOR IAR COMPILER                                              ####
###########################################################################################################
ifeq ($(DERIVATIVE_GROUP_$(DERIVATIVE)),$(filter $(DERIVATIVE_GROUP_$(DERIVATIVE)),F1H C1H C1M_AZ P1H F1KH))
  define MEMORY_ALLGROUPS_IAR
    $(ECHO) "define region ROM_near       = mem:[from 0x00000000 size 0x8000];"                                 >> $@; \
    $(ECHO) "define region ROM_A_region   = mem:[from 0x00000000 size $(CODEFLASH_SIZE_BANKA_$(DERIVATIVE))k];" >> $@; \
    $(ECHO) "define region ROM_B_region   = mem:[from $($(DERIVATIVE_GROUP_$(DERIVATIVE))_CODEFLASH_START_ADDRESS_BANKB_$(CODEFLASH_SIZE_BANKB_$(DERIVATIVE))) size $(CODEFLASH_SIZE_BANKB_$(DERIVATIVE))k];"        >> $@; \
    $(ECHO) "define region RAM_PRI_region_Core0 = mem:[from $($(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE0_$(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE))) size $(LOCAL_RAM_SIZE_CORE0_$(DERIVATIVE))k]; " >> $@; \
    $(ECHO) "define region RAM_PRI_region_Core1 = mem:[from $($(DERIVATIVE_GROUP_$(DERIVATIVE))_LOCAL_RAM_START_ADDRESS_CORE1_$(LOCAL_RAM_SIZE_CORE1_$(DERIVATIVE))) size $(LOCAL_RAM_SIZE_CORE1_$(DERIVATIVE))k]; " >> $@;
  endef

else
  define MEMORY_ALLGROUPS_IAR
    $(ECHO) "define region ROM_near             = mem:[from 0x00000000 size 0x8000];"                           >> $@; \
    $(ECHO) "define region ROM_A_region         = mem:[from 0x00000000 size $(CODEFLASH_SIZE_$(DERIVATIVE))k];" >> $@; \
    $(ECHO) "define region RAM_PRI_region_Core0 = mem:[from $($(DERIVATIVE_GROUP_$(DERIVATIVE))_RAM_START_ADDRESS_$(GLOBAL_RAM_SIZE_$(DERIVATIVE))) size $(GLOBAL_RAM_SIZE_$(DERIVATIVE))k]; " >> $@;
  endef
endif