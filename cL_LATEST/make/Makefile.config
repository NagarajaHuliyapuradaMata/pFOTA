#------------------------------------------------------------------------------
#------------------------- Must be filled out ---------------------------------
# Derivative (see BrsHw_DerivativeList.h for supported ones)
# This is used for ROM/RAM mapping, compiler switches, etc...
#------------------------------------------------------------------------------
DERIVATIVE = 701018

#------------------------------------------------------------------------------
#------------------------- Must be filled out ---------------------------------
# Select clock frequency of main oscillator (MHz)
#------------------------------------------------------------------------------
MAIN_OSC_CLK = 16

#------------------------------------------------------------------------------
#------------------------- Must be filled out ---------------------------------
# Select BRS time base clock (MHz). PLL will be used to create this frequency.
# Possible values are:  Derivative specific
#------------------------------------------------------------------------------
TIMEBASE_CLOCK = 80

#------------------------------------------------------------------------------
#--------------- Must be filled out if BRS_ENABLE_SUPPORT_LEDS is set ---------
# Select EVA board, possible values are:
#   DEFAULT     - Toggle Port 10 Pin 3
#   F1X_144PIN  - F1X-144PIN-PB-T1-V1 on X1X-MB-T1-V1
#                   (toggle Port8 Pin0 --> LED10)(TCM: Port 0 Pins 9-12)
#   VEN001092   - C1H      (toggle Port 4 Pin 11 --> LED1)
#   VEN001099   - D1M2H    (toggle Port 16 Pin 0 --> LED25)
#   F1X_064PIN  - F1X-064PIN-PB-T1-V1 on X1X-MB-T1-V1
#                   (toggle Port8 Pin0 --> LED10)(TCM: Port 0 Pins 9-12)
#   VEN001220   - E1M      (toggle Port 6 Pin 0 --> LED8)
#   VEN001243   - E1x-FCC2 (toggle Port 6 Pin 0 --> LED8)
#   P1XC_292PIN - P1XC-292PIN-PB-T1-V2 on X1X-MB-T1-V1
#                   (toggle Port6 Pin0 --> LED10)(TCM: Port 2 Pins 12-15)
#   VEBN01283   - F1M      (toggle Port 8 Pin 7 --> GPIO PIN 86)
#   VEBN01326   - P1H-C    (toggle Port 0 Pin 10)
#   F1X_176PIN  - F1x-176PIN-PB-T1-V1...V3 on X1X-MB-T1-V1
#                   (toggle Port8 Pin0 --> LED10)(TCM: Port 0 Pins 9-12)
#   MANGO       - SBEV-RH850-MAIN D1x Mango MainBoard
#   HSR_715     - F1H      (toggle Port 0 Pin 11 --> DBG_LED_GRN)
#   HSR_1502    - F1L - RH850/F1x StarterKit
#                   (toggle Port 0 Pin 11 --> LED1, set CAN0_EN and CAN1_EN to high)
#   P1X_144PIN  - P1X-144PIN-PB-T1-V2 on X1X-MB-T1-V1
#                   (toggle Port5 Pin8 --> LED10)(TCM: Port 3 Pins 3,6,9,10)
#   F1X_100PIN  - F1X-100PIN-PB-T1-V2 on X1X-MB-T1-V1
#                   (toggle Port8 Pin0 --> LED10)(TCM: Port 0 Pins 9-12)
#   P1X_100PIN  - P1X-100PIN-PB-T1-V2 on X1X-MB-T1-V1
#                   (toggle Port2 Pin2 --> LED10)(TCM: Port 3 Pins 3,6,9,10)
#   P1XC_80PIN  - P1X-080PIN-PB-T1-V1 on X1X-MB-T1-V1
#                   (toggle Port2 Pin2 --> LED6)(TCM: Port 2 Pins 6,7,8,9)
#------------------------------------------------------------------------------
EVA_BOARD =

#------------------------------------------------------------------------------
#------------------------- MUST be filled out for GHS compiler ----------------
# Select the debugger
# possible values are:    MINICUBE
#                         E1
#------------------------------------------------------------------------------
DEBUGGER = E1

#------------------------------------------------------------------------------
#---------- MUST be filled out for RENESAS Debug Environment (CS+) ------------
# To be able to start Cubesuite+, it needs the path to the CubeSuiteW+.exe file.
# For further informations read in OneNote: Debugging RH850 with Renesas Cube Suite +
# Example: CubeSuiteW+.exe is located in D:\uti\Renesas\Rh850\CubeSuite_V40100\CS+\CC
# Default: COMPILER_BASE
#------------------------------------------------------------------------------
EMU_PATH = D:\uti\Renesas\Rh850\CubeSuite_V40100\CS+\CC

#------------------------------------------------------------------------------
#- Must be filled out for GHS compiler and/or RENESAS Debug Environment (CS+) -
# To be able to communicate with the debugger, it needs a device file.
# here a different device file then set in the makefile can be used.
# Device files for GHS can be found at
# \\vi.vector.int\backup\PES\DevelopmentTools\EmuAndDebugger\RH850\GettingStartedPaket_(DeviceFile)
#
# Example: dr7f7010352afp
#          use DR7F701312 for R7F701353
#
# And for CS+, Device files can be found at:
# $(EMU_PATH)\Device\RH850
#
# For further informations read in OneNote: Debugging RH850 with Renesas Cube Suite +
# Example: R7F701034xAFP_common.xml
#          use R7F701034xAFP for R7F701034
#------------------------------------------------------------------------------
DEVICE_FILE_NAME = DR7F701018

#------------------------------------------------------------------------------
#------------------------- MUST be filled out for IAR compiler ----------------
# Select Data Model
# possible values are: tiny
#                      small
#                      medium
#                      large
#------------------------------------------------------------------------------
DATA_MODEL = 

#------------------------- Can be filled out ----------------------------------
# Select the type of used OS.
# Possible values are: BRS      Timer/IRQ generated by BRS (Default)
#                      OSGEN7   Os_CoreGen7 based MICROSAR OS
#------------------------------------------------------------------------------
OS_USECASE =

#--------------- Can be filled out (only implemented for GHS yet) -------------
# Safe Context usecase only:
# Type in the names of your QM and ASIL application as defined 
# in your OS configuration
# 
# Currently, only one QM OS-application (e.g. for BSW) and one 
# ASIL OS-application (e.g. SafeWdg) are supported
#
# Please note: - If no name is entered, no sections for this will be generated 
#                for this OS application in the linker script
#              - If more than two OS applications are used, the linker script 
#                must be adapted manually or a custom linker file must be used!
#------------------------------------------------------------------------------
OS_APPLICATION_NAME_QM =
OS_APPLICATION_NAME_ASIL =

#--------------- Can be filled out --------------------------------------------
# Type in the filename of your custom linker script, e.g. "CustomScript.ld"
# If no filename is set, the linker script will be generated by the Brs
# 
#------------------------------------------------------------------------------
USER_LINKER_COMMAND_FILE =
